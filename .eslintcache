[{"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\index.js":"1","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\App.js":"3","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\InformationTemp.js":"5","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Chart2.js":"6","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\middleware\\crudMiddleware.js":"7","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\staticDetailsReducer.js":"8","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\actions\\staticAction.js":"9","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\applictaionsCards\\SourcesCards.js":"10","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\reducerUtils.js":"11","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\BarT.js":"12","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ChartT.js":"13","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Gouge2.js":"14","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeTask.js":"15","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeDeals.js":"16","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougePaper.js":"17","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Try.js":"18"},{"size":517,"mtime":1615379974868,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1615379974876,"results":"21","hashOfConfig":"20"},{"size":338,"mtime":1618898346506,"results":"22","hashOfConfig":"20"},{"size":448,"mtime":1618309241935,"results":"23","hashOfConfig":"20"},{"size":24080,"mtime":1619097598351,"results":"24","hashOfConfig":"20"},{"size":3862,"mtime":1616582486544,"results":"25","hashOfConfig":"20"},{"size":7482,"mtime":1618989943077,"results":"26","hashOfConfig":"20"},{"size":4983,"mtime":1618827484509,"results":"27","hashOfConfig":"20"},{"size":444,"mtime":1615379974748,"results":"28","hashOfConfig":"20"},{"size":12369,"mtime":1619097318971,"results":"29","hashOfConfig":"20"},{"size":346,"mtime":1618126615233,"results":"30","hashOfConfig":"20"},{"size":3443,"mtime":1618991465014,"results":"31","hashOfConfig":"20"},{"size":3286,"mtime":1617704305058,"results":"32","hashOfConfig":"20"},{"size":865,"mtime":1618398331030,"results":"33","hashOfConfig":"20"},{"size":901,"mtime":1618398404301,"results":"34","hashOfConfig":"20"},{"size":873,"mtime":1618398394058,"results":"35","hashOfConfig":"20"},{"size":862,"mtime":1618398399609,"results":"36","hashOfConfig":"20"},{"size":3975,"mtime":1618391920487,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vhixdz",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\index.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\App.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\InformationTemp.js",["78"],"\r\nimport React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport $ from 'jquery'\r\nimport HeaderLeader from '@leadercodes/leader-header'\r\n\r\n\r\nimport './InformationTemp.css';\r\n// import iconFive from '../img/iconFive.png'\r\n// import iconOne from '../img/iconOne.png'\r\n// import iconTwo from '../img/iconTwo.png';\r\n// import iconThree from '../img/iconThree.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport Chart2 from './Chart2'\r\nimport '../App.css'\r\nimport SourcesCards from './applictaionsCards/SourcesCards';\r\nimport '../components/applictaionsCards/SourcesCardsStyles.css'\r\nimport Gouge2 from './Gouge2'\r\nimport GougeTask from './GougeTask'\r\nimport GougeDeals from './GougeDeals'\r\nimport GougePaper from './GougePaper'\r\n\r\n\r\n\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n\r\nlet circleStyle1 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    backgroundColor: \"#DDA204\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle2 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"#0EBAA5\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle3 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"rgb(103, 114, 222)\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle4 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"#FD2443\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 1\r\n};\r\n\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nexport default withStyles(useStyles)(function Information() {\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const user = ReducerData.user\r\n    const dispatch = useDispatch()\r\n    const [more, setMore] = useState(false);\r\n    let [inmore, setInMore] = useState(true);\r\n\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#day\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (dateFormater === currentDate)\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (detaContact === currentDate)\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n        if (ReducerData.AllProject != null) {\r\n\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (dateProject === currentDate)\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (dateFormater === currentDate)\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (detaPaper === currentDate)\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n        }\r\n\r\n    }\r\n    function filterByWeek() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#week\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeWeek))\r\n\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaContact) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    function filterByMonth() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#month\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeMonth))\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            ;\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\")\r\n                return (new Date(detaContact) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    function filterByYear() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#year\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeYear))\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length))\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaContact) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <HeaderLeader appName={\"Leader\"} userName={user ? user.username : \"\"} />\r\n            <div className=\"firstDiv\" style={{ backgroundColor: 'rgb(248, 249, 250)', paddingTop: '80px' }}>\r\n                <div className=\"row pb-5\" style={{ marginRight: '5%', marginLeft: '5%' }} >\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                        <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                        </div>\r\n                    </div>‏\r\n                            <Grid container className=\"grid-container\" spacing={4} >\r\n                        <Grid item xs={12} sm={3} >\r\n                            <Paper className=\"paperOne\" onClick={() => { window.open(` https://contacts.dev.leader.codes/${user.username}`) }}\r\n                                style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#fff', height: ' 100px', width: '240px', color: '#DDA204' }}>\r\n                                <div className=\"ml-2 total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Contacts {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\" >\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 style={{ fontSize: \"19px\", color: \"#DDA204\" }} className=\"h6\">\r\n                                                {ReducerData.leaderStatic.sumContacts ? ReducerData.leaderStatic.sumContacts + \"/5000\" : \"0/5000\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <Gouge2 className=\"gouge1\"></Gouge2></div>\r\n                                    {/* <div onClick={\"https://pay.leader.codes/\"} className=\"upladge\" style={{ backgroundColor: \"#DDA204\" }}>upradge</div> */}\r\n\r\n\r\n                                </div>\r\n                                <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                                </div>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper className=\"paperTwo\" onClick={() => { window.open(`https://papers.dev.leader.codes/admin/${user.username}`) }} style={{ padding: 10, background: '#fff', cursor: 'pointer', color: '#01DCD1', borderRadius: '14px', height: ' 100px', width: '240px' }}>\r\n                                <div className=\"total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Papers {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\" >\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>\r\n                                                {ReducerData.leaderStatic.sumPapers ? ReducerData.leaderStatic.sumPapers + \"/500\" : \"0/500\"}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougePaper className=\"gouge1\"></GougePaper></div>\r\n                                </div>\r\n                                {/* <div onClick={\"https://pay.leader.codes/\"} className=\"upladge\" style={{ backgroundColor: \"#0EBAA5\" }}>upradge</div> */}\r\n                                {/* <div className=\"row\" style={{ margin: '1px' }}>\r\n                                </div> */}\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}  >\r\n                            <Paper className=\"paperThree\"\r\n                                onClick={() => {\r\n                                    window.open(` \r\n                            https://contacts.dev.leader.codes/${user.username}/deals`)\r\n                                }}\r\n                                style={{ cursor: 'pointer', padding: 10, background: '#fff', color: '#5475E3', borderRadius: '14px', height: ' 100px', width: '240px' }}>\r\n                                <div className=\"ml-2 total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Deals {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\">\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>\r\n                                                {ReducerData.leaderStatic.sumProjects ? ReducerData.leaderStatic.sumProjects + \"/500\" : \"0/500\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougeDeals className=\"gouge1\"></GougeDeals></div>\r\n                                    {/* <div\r\n                                        onClick={() => {\r\n                                             \r\n                                            window.location.assign(`https://pay.leader.codes/`)\r\n                                        }}\r\n                                        className=\"upladge\" style={{ backgroundColor: \"#5475E3\" }}>upradge</div> */}\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}  >\r\n                            <Paper className=\"paperFour\"\r\n\r\n                                onClick={() => {\r\n                                    window.open(` \r\n                            https://reacthub.dev.leader.codes/${user.username}/myTasks`)\r\n                                }}\r\n                                style={{\r\n                                    paddingRight: '5px', paddingTop: '10px', background: '#fff', color: '#FD2443', borderRadius: '14px', cursor: 'pointer'\r\n                                    , height: ' 100px', width: '240px'\r\n                                }}>\r\n                                <div\r\n\r\n                                    className=\"ml-2 total cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Tasks  {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div class=\" ml-2\">\r\n                                        <div className=\" col-6 p-2\" >\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>{ReducerData.leaderStatic.sumTasks ? ReducerData.leaderStatic.sumTasks + \"/500\" : \"0/500\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougeTask className=\"gouge1\"></GougeTask></div>\r\n                                    {/* <p\r\n                                        onClick={() => {\r\n                                            window.location.assign(` \r\n                                            https://pay.leader.codes/`)\r\n                                        }}\r\n                                        className=\"upladge\" style={{ backgroundColor: \"#FD2443\" }}>\r\n                                        upradge\r\n                                    </p> */}\r\n                                </div>\r\n                                <div className=\"row\" style={{ margin: '1px' }}>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n                {more ?\r\n                    <>\r\n                        <div className=\"d-flex justify-content-center align-content-center\">\r\n                            <p className=\"moreTxt1  moreBtn\" onClick={() => {\r\n                                console.log(inmore)\r\n                                setInMore(true)\r\n                                console.log(inmore)\r\n                                setMore(!more)\r\n                            }}>Show Less</p>\r\n                        </div>\r\n                        <div className=\"div-container\">\r\n                            <Container className=\"p-0\">\r\n                                <div class=\"container p-0\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6 mb-0 text-time-container\">\r\n                                            <Navbar expand=\"md\" variant=\"light\" className=\"nav mb-0 d-flex navmy\" style={{ justifyContent: \"flex-start\" }}>\r\n                                                <p id=\"day\" onClick={filterByDay} className=\"filterBy\">Day</p>\r\n                                                <p id=\"week\" onClick={filterByWeek} className=\"filterBy\">Week</p>\r\n                                                <p id=\"month\" onClick={filterByMonth} className=\"filterBy\">Month</p>\r\n                                                <p id=\"year\" onClick={filterByYear} className=\"filterBy\">Year</p>\r\n                                            </Navbar>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 circle-menu-container\">\r\n                                            <Navbar expand=\"md\" variant=\"light\" className=\"justify-content-end is-small nav2\">\r\n                                                <p style={circleStyle1}>\r\n                                                </p>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Contacts</Navbar.Brand>\r\n                                                <div style={circleStyle2}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Papers</Navbar.Brand>\r\n                                                <div style={circleStyle3}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Deals</Navbar.Brand>\r\n                                                <div style={circleStyle4}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Tasks</Navbar.Brand>\r\n                                            </Navbar>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                        <Chart2 />\r\n                        <div style={{ backgroundColor: \"rgb(248, 249, 250)\", height: \"55px\" }} className=\"backgroundDiv\"></div>\r\n                    </>\r\n                    :\r\n                    <div className=\"d-flex justify-content-center align-content-center\">\r\n                        <p className=\"moreTxt1 moreBtn\" onClick={\r\n                            () => {\r\n                                ;\r\n                                setMore(!more)\r\n                                console.log(more)\r\n                                setInMore(false)\r\n                            }}>Show More</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <SourcesCards inMore={inmore} />\r\n        </div >\r\n    )\r\n})\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\middleware\\crudMiddleware.js",["79","80"],"import { data } from 'jquery';\r\nimport { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  debugger\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\n//I want to get the kind of the jwt according to the url\r\n\r\nlet jwt = \"\"\r\n\r\nconst getJwt = (url) => {\r\n  debugger\r\n  // document.cookie && document.cookie.includes(\"devJwt\") ? document.cookie.split(\";\")\r\n  // url.href.includes('dev') ?\r\n  jwt = document.cookie.includes('devJwt') ?\r\n    document.cookie.split(\";\")\r\n      .filter(s => s.includes('devJwt'))[0].split(\"=\").pop()\r\n    : url.href.includes('stg') ?\r\n      jwt = document.cookie.includes('stgJwt') ?\r\n        document.cookie.split(\";\")\r\n          .filter(s => s.includes('stgJwt'))[0].split(\"=\").pop() : null\r\n      : jwt = document.cookie.includes('jwt') ?\r\n        document.cookie.split(\";\")\r\n          .filter(s => s.includes('jwt'))[0].split(\"=\").pop() : null\r\n\r\n}\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let url = window.location;\r\n    let userName = (url.pathname.split('/')[1]);\r\n    getJwt(url);\r\n    dispatch(actions.setJwt(jwt))\r\n\r\n    return fetch(`https://lobby.dev.leader.codes/api/${userName}/getUserByUserName`,\r\n      {\r\n        method: 'GET', headers: { 'authorization': jwt }\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          window.location.assign(`https://accounts.codes/lobby/login`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        debugger\r\n        dispatch(actions.setUser(result));\r\n        console.log(\"All User Details\" + result);\r\n        //  fetch to get sum of Deals-(Project) for user-----------------\r\n        fetch(`https://contacts.dev.leader.codes/api/deal/${userName}/getAllDealsByUser`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        }).then((data) => data.json())\r\n          .then((data) => {\r\n            if (!data.status) {\r\n              debugger\r\n              //all data for project\r\n              let projectData = data\r\n              //only sumProject\r\n              if (projectData && projectData.length !== 0) {\r\n                debugger\r\n                // let sumProject = data.countProjectsForUser\r\n                let result = projectData.result.length\r\n                dispatch(actions.setProjectStatic(result));\r\n                dispatch(actions.setProjectData(projectData));\r\n                dispatch(actions.setProjectChart(projectData));\r\n                console.log(data)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setProjectStatic(\"0\"));\r\n              dispatch(actions.setProjectData(null));\r\n              dispatch(actions.setProjectChart(null));\r\n            }\r\n          })\r\n        // fetch to get sum tasks for user-------------\r\n        fetch(`https://reacthub.dev.leader.codes/api/${userName}/getAllTasksForUser`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n            if (!data.status) {\r\n              //all data for project\r\n              let taskData = data.userTasksList\r\n              //only sumTask\r\n              if (taskData && taskData.length !== 0) {\r\n                let sumTask = (data.countTasksForUser)\r\n                dispatch(actions.setTaskStatic(sumTask));\r\n                dispatch(actions.setTaskData(taskData));\r\n                dispatch(actions.setTaskChart(taskData));\r\n                console.log(data)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setTaskStatic(\"0\"));\r\n              dispatch(actions.setTaskData(null));\r\n              dispatch(actions.setTaskChart(null));\r\n            }\r\n          })\r\n        //  fetch to get sum of papers for user-----------------\r\n        fetch(`https://papers.dev.leader.codes/api/${userName}/getAllQuote`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n\r\n            if (!data.status) {\r\n              // let sumPapers = (data.quotes.length)\r\n              if (data.quotes && data.quotes.length !== 0) {\r\n                let sumPapers = (data.quotes.length)\r\n                let dataQuotes = data.quotes\r\n                dispatch(actions.setPaperStatic(sumPapers));\r\n                dispatch(actions.setPaperData(dataQuotes));\r\n                dispatch(actions.setPaperChart(dataQuotes));\r\n                console.log(data)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setPaperStatic(\"0\"));\r\n              dispatch(actions.setPaperData(null));\r\n              dispatch(actions.setPaperChart(null));\r\n            }\r\n          })\r\n        // fetch to get sum of contacts for user----------------------\r\n        fetch(`https://api.dev.leader.codes/${userName}/getContacts/?includesConversations=false`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n            debugger\r\n\r\n            if (!data.status) {\r\n              let contactData = data\r\n              //only sumContact\r\n              if (contactData && contactData.length !== 0) {\r\n                let sumContact = (contactData.length)\r\n                dispatch(actions.setContactStatic(sumContact));\r\n                dispatch(actions.setContactData(contactData));\r\n                dispatch(actions.setContactChart(contactData));\r\n                console.log(contactData)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setContactStatic(\"0\"));\r\n              dispatch(actions.setContactData(null));\r\n              dispatch(actions.setContactChart(null));\r\n            }\r\n          })\r\n      },\r\n        (err) => {\r\n          return err;\r\n        })\r\n  }\r\n  return next(action)\r\n}\r\nexport const extractJwt = ({ dispatch, getState }) => next => action => {\r\n  if (action.type === 'EXTRACT_JWT') {\r\n\r\n\r\n    let params = (new URL(document.location)).searchParams;\r\n    let jwtGlobal = params.get('jwt');\r\n    if (jwtGlobal) {\r\n      let newUrl = window.location.href\r\n      newUrl = newUrl.split('?jwt=')\r\n      newUrl = newUrl[0]\r\n      let date = new Date(Date.now() + 86400e3);\r\n      date = date.toUTCString();\r\n      var expires = \"expires=\" + date;\r\n      document.cookie = \"devJwt\" + \"=\" + jwtGlobal + \";\" + expires + \";domain=.dev.leader.codes;path=/\";\r\n      window.location.replace(newUrl)\r\n    }\r\n    else {\r\n      dispatch({ type: 'INIT_DATA' });\r\n    }\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\staticDetailsReducer.js",["81","82","83","84"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumContacts: 0, sumPapers: 0, sumProjects: 0, sumTasks: 0 },\r\n    GougeContact: \"0\",\r\n    dataStatic: [],\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    jwt: \"\",\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    user: {}\r\n\r\n\r\n};\r\n\r\nconst staticData = {\r\n\r\n    setJwt(state, action) {\r\n\r\n        state.jwt = (action.payload);\r\n    },\r\n    setUser(state, action) {\r\n\r\n        state.user = (action.payload);\r\n    },\r\n    setContactStatic(state, action) {\r\n\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setProjectStatic(state, action) {\r\n\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n        if (action.payload != null) {\r\n            state.AllProject = action.payload.result\r\n        }\r\n        else {\r\n            state.AllProject = action.payload\r\n        }\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n    },\r\n    setTaskData(state, action) {\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n        if (action.payload != null) {\r\n            let allData = action.payload\r\n            const arr = [...state.tasks];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].startDate.split(\"/\")\r\n                let date2 = date1[1]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.tasks = [...arr];\r\n        }\r\n    },\r\n\r\n    setProjectChart(state = initialState, action) {\r\n        if (action.payload != null) {\r\n            let allData = action.payload.result\r\n            const arr = [...state.projects];\r\n            for (let i = 0; i < allData.length; i++) {\r\n                const date1 = allData[i].closeDate\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.projects = [...arr];\r\n        }\r\n    },\r\n    setContactChart(state = initialState, action) {\r\n        debugger\r\n        if (action.payload != null) {\r\n\r\n            let allData = action.payload\r\n            console.log(initialState.contacts)\r\n            const arr = [...state.contacts];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].createDateAndTime\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.contacts = [...arr];\r\n        }\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n\r\n        if (action.payload != null) {\r\n            let allData = action.payload\r\n            console.log(initialState.papers)\r\n            const arr = [...state.papers];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].createdDate\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.papers = [...arr];\r\n        }\r\n    },\r\n\r\n\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    },\r\n    setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n};\r\n\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\applictaionsCards\\SourcesCards.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState } from \"react\";\r\nimport $ from 'jquery'\r\n\r\nimport box from '../../assets/images/box.svg';\r\nimport crm from '../../assets/images/crm.svg';\r\nimport papers from '../../assets/images/papers.svg';\r\nimport time from '../../assets/images/time.svg';\r\nimport funnel from '../../assets/images/funnel.svg';\r\nimport hub from '../../assets/images/hub.svg';\r\n// import chat from '../../assets/images/chat.svg';\r\nimport clocks from '../../assets/images/clocks.svg';\r\nimport BLDR from '../../assets/images/BLDR.svg';\r\nimport knowme from '../../assets/images/knowme.svg';\r\nimport hoverKnowme from '../../assets/images/hoverKnowme.svg';\r\nimport soundBox from '../../assets/images/soundBox.svg';\r\nimport hoverBLDR from '../../assets/images/hoverBLDR.svg';\r\nimport hoverSoundBox from '../../assets/images/hoverSoundBox.svg';\r\nimport vlogger from '../../assets/images/vlogger.svg';\r\nimport hoverVlogger from '../../assets/images/hoverVlogger.svg';\r\nimport hoverClocks from '../../assets/images/hoverClocks.svg';\r\nimport hoverBox from '../../assets/images/hoverBox.svg';\r\nimport hoverFunnel from '../../assets/images/hoverFunnel.svg';\r\nimport hoverHub from '../../assets/images/hoverHub.svg';\r\n// import hoverChat from '../../assets/images/hoverChat.svg';\r\n// import hoverStories from '../../assets/images/hoverStories.svg';\r\nimport hoverPapers from '../../assets/images/hoverPapers.svg';\r\nimport hoverCrm from '../../assets/images/hoverCrm.svg';\r\nimport hoverTime from '../../assets/images/hoverTime.svg';\r\nimport user from '../../assets/images/user.svg'\r\n// import ribbon from '../../assets/images/ribbon.svg'\r\n// import SourcesCardsStyles from './SourcesCardsStyles.css';\r\n// import { connect } from 'react-redux';\r\n// import { getUser } from '../../redux/actions/user.action';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// import { Badge } from '@material-ui/core';\r\nimport { animations } from 'react-animation';\r\nimport { useSelector } from 'react-redux';\r\n// import { actions } from '../../Redux/actions/staticAction';\r\n\r\n\r\nfunction SourcesCards(props) {\r\n\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const [index, setIndex] = useState(-1);\r\n    // const [userName, setuser, Name] = useState(\"\");\r\n    const [clickedApplicationIndex, setClickedApplicationIndex] = useState(-1);\r\n    const [more, setMore] = useState(false);\r\n    const [initial, setinitial] = useState(true);\r\n    // const [jwt, setJwt] = useState(\"\");\r\n    ;\r\n\r\n    const leaderApps = [\r\n        {\r\n            i: 0,\r\n            title: \"Box\",\r\n            text: \"CRM For Managing All Client Contact And Interactions Using Leader Tools\",\r\n            isActiveApp: true,\r\n            color: \"#2198FF\",\r\n            overColor: \"#EFF7FF\",\r\n            img: box,\r\n            overImg: hoverBox,\r\n            url: `https://box.dev.leader.codes/${ReducerData.user.username}`,\r\n            leader: true\r\n        },\r\n        // {\r\n        //     i: 1,\r\n        //     title: \"Funnel\",\r\n        //     text: \"Lead Capture System With Marketing Campaigns And Landing Pages\",\r\n        //     isActiveApp: true,\r\n        //     color: \"#44D7B6\",\r\n        //     overColor: \"#EFFFFC\",\r\n        //     overImg: hoverFunnel,\r\n        //     img: funnel,\r\n        //     url: `https://dev.vloger.codes/admin/${ReducerData.user.username}`,\r\n        //     leader: true\r\n        // },\r\n        {\r\n            i: 2,\r\n            title: \"Hub\",\r\n            text: \"Manage Your Projects, Teams And Tasks, Priorities And Performance Goals\",\r\n            isActiveApp: true,\r\n            color: \"#6DD400\",\r\n            overColor: \"#FAFFF5\",\r\n            overImg: hoverHub,\r\n            img: hub,\r\n            url: `https://reacthub.dev.leader.codes/${ReducerData.user.username}`,\r\n            leader: true\r\n        },\r\n        // {\r\n        //     i: 3,\r\n        //     title: \"Leader Clocks\",\r\n        //     text: \"Blog Writing Platform With Integrated Keywords And Lead Conversation System\",\r\n        //     isActiveApp: false,\r\n        //     color: \"#FF808B\",\r\n        //     overColor: \"#FFF5F6\",\r\n        //     overImg: hoverClocks,\r\n        //     img: clocks,\r\n        //     url: `https://chat.dev.leader.codes/${ReducerData.user.username}`,\r\n        //     leader: true\r\n        // },\r\n        {\r\n            i: 4,\r\n            title: \"Time\",\r\n            text: \"Intergrated Calendar For Managing Leads, Meetings Events And Deadlines\",\r\n            isActiveApp: true,\r\n            color: \"#B620E0\",\r\n            overColor: \"#FCF1FF\",\r\n            img: time,\r\n            overImg: hoverTime,\r\n            url: `https://calendar.dev.leader.codes/${ReducerData.user.username}`,\r\n            leader: true\r\n        },\r\n\r\n        {\r\n            i: 5,\r\n            title: \"papers\",\r\n            text: \"Intuitive Form Builder Including Api Integration With Popular Applications\",\r\n            isActiveApp: false,\r\n            color: \"#F7B500\",\r\n            overColor: \"#FFFAEE\",\r\n            overImg: hoverPapers,\r\n            img: papers,\r\n            url: `https://papers.dev.leader.codes/admin/${ReducerData.user.username}`,\r\n            leader: true\r\n        },\r\n        {\r\n            i: 6,\r\n            title: \"Contacts\",\r\n            text: \"Customizable Proposal Templates For Customer Quotations And Contracts\",\r\n            isActiveApp: true,\r\n            color: \"#6236FF\",\r\n            overColor: \"#F4F2FF\",\r\n            overImg: hoverCrm,\r\n            img: crm,\r\n            url: `https://contacts.dev.leader.codes/${ReducerData.user.username}`,\r\n            leader: true\r\n\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    const moreApps = [\r\n        {\r\n            i: 7,\r\n            title: \"Vlogger\",\r\n            text: \"Customizable Proposal Templates For Customer Quotations And Contracts\",\r\n            isActiveApp: true,\r\n            color: \"#DB0019\",\r\n            overColor: \"#FFEAEC\",\r\n            overImg: hoverVlogger,\r\n            img: vlogger,\r\n            url: `https://dev.vloger.codes/admin/${ReducerData.user.username}?jwt=${ReducerData.jwt}`,\r\n            leader: false\r\n        },\r\n        {\r\n            i: 8,\r\n            title: \"Sound Box\",\r\n            text: \"Customizable Proposal Templates For Customer Quotations And Contracts\",\r\n            isActiveApp: true,\r\n            color: \"#4A0082\",\r\n            overColor: \"#F7EBFF\",\r\n            overImg: hoverSoundBox,\r\n            img: soundBox,\r\n            url: `https://quote.dev.leader.codes/${ReducerData.user.username}/NewLead`,\r\n            leader: false\r\n        },\r\n        {\r\n            i: 9,\r\n            title: \"Know Me\",\r\n            text: \"Customizable Proposal Templates For Customer Quotations And Contracts\",\r\n            isActiveApp: true,\r\n            color: \"#C41082\",\r\n            overColor: \"#FFF2FA\",\r\n            overImg: hoverKnowme,\r\n            img: knowme,\r\n            // url: `https://quote.dev.leader.codes/saraa/NewLead`\r\n            url: `https://quote.dev.leader.codes/${ReducerData.user.username}/NewLead`,\r\n            leader: false\r\n        },\r\n        {\r\n            i: 10,\r\n            title: \"BLDR\",\r\n            text: \"Customizable Proposal Templates For Customer Quotations And Contracts\",\r\n            isActiveApp: true,\r\n            color: \"#FBCD4F\",\r\n            overColor: \"#FFF2FA\",\r\n            overImg: hoverBLDR,\r\n            img: BLDR,\r\n            // url: `https://quote.dev.leader.codes/sarra/NewLead`\r\n            url: `https://quote.dev.leader.codes/${ReducerData.user.username}/NewLead`,\r\n            leader: false\r\n        }\r\n    ]\r\n\r\n    const navigateProfil = () => {\r\n        let url = window.location;\r\n        let userName = (url.pathname.split('/')[1]);\r\n        window.open(`https://lobby.dev.leader.codes/${ReducerData.user.username}/profile`);\r\n    }\r\n\r\n    const showApps = (apps) => {\r\n\r\n        return (\r\n            <div className=\"row all-apps-in-small in-large\">\r\n                {apps.map((card) => card &&\r\n                    <div className=\"col-sm-6 col-md-6 col-lg-4 col-xl-3 col-xs-12 mb-5 d-flex justify-content-center\">\r\n                        <div class=\"box myCard\"\r\n                            style={{\r\n                                backgroundColor: index === card.i ? card.overColor : \"#F4F2FF\",\r\n                                animation: !card.leader && more ? animations.fadeIn : !card.leader && console.log(\"animations.fadeOut\")\r\n                            }}\r\n                            onClick={() => {\r\n                                // if (card.isActiveApp)\r\n\r\n                                // console.log(ReducerData.jwt)\r\n\r\n                                // console.log(ReducerData.jwt)\r\n                                window.open(card.url)\r\n                                window.open(card.url)\r\n\r\n                                // else\r\n                                //     setClickedApplicationIndex(card.i)\r\n                            }}\r\n                            onMouseEnter={() => {\r\n\r\n                                setIndex(card.i)\r\n                            }}\r\n                            onMouseLeave={() => {\r\n\r\n                                setIndex(-1)\r\n                                setClickedApplicationIndex(-1)\r\n                            }}\r\n                            hidden={card.i > 6 && initial}\r\n                        >\r\n                            <img className=\"offset-2 mt-2 mb-0  d-flex align-items-center appIcon\" src={card.img} alt=\"img\"\r\n                                src={index === card.i ? card.overImg : card.img} />\r\n                            <div class=\"hid-box\" style={{ backgroundColor: card.color }}>\r\n                                {card.i === index ?\r\n                                    <p className=\"myCardText p-2 m-1\">{card.text}</p>\r\n                                    : <p className=\"myCardTitle p-2 mt-2\">{card.title}</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"warpDiv space row  offset-2 col-8  d-flex justify-content-center align-items-center\">\r\n                <div className=\"height col-12 d-flex justify-content-center\">\r\n                    <div className=\"imgProfil in-small-profil mt-3 align-items-center\">\r\n                        {props.inMore ?\" \"\r\n                            // $(\".space\").css(\"margin-top\", \"unset\")\r\n                            :\r\n                            <div className=\"inmore\"></div>\r\n                        }\r\n                        {/* <Tooltip placement=\"top\" arrow title=\"Profile setting\" aria-label=\"add\">\r\n                            <img className=\"imgProfil imgProfilinsmall\"\r\n                                onClick={navigateProfil} alt=\"img 1\"\r\n                                src={ReducerData.user.imgProfile ? ReducerData.user.imgProfile : user}\r\n                                onError={(e) => { e.target.onerror = null; e.target.src = user }\r\n                                }\r\n                            />\r\n                        </Tooltip> */}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\" in-small-hey d-flex justify-content-center heyTxt mb-3 mt-2\">\r\n                    {ReducerData.user.username ? `Hey, ${ReducerData.user.username}`\r\n                        : \"Hey\"}\r\n                </div> */}\r\n\r\n                <div className=\"title col-12 mb-4 divTitle\">\r\n                    <h2 className=\"title\">\r\n                        What do you want to do?\r\n                </h2>\r\n                </div>‏\r\n\r\n                {showApps(leaderApps)}\r\n                {/* {more && showApps(moreApps)}\r\n                <div className=\"row mt-0 d-flex moreBtn justify-content-center\">\r\n                    <div className=\"col d-flex justify-content-center\" onClick={() => {\r\n                        setMore(!more)\r\n                        setinitial(false)\r\n                    }}>\r\n                        {more ?\r\n                            <p className=\"moreTxt\" >Less-</p>\r\n                            : <p className=\"moreTxt\" >More+</p>\r\n                        }\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default SourcesCards;\r\n\r\n","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\reducerUtils.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\BarT.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ChartT.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Gouge2.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeTask.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeDeals.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougePaper.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Try.js",["99","100"],{"ruleId":"101","severity":1,"message":"102","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":199,"column":34,"nodeType":"108","messageId":"109","endLine":199,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":64,"column":30,"nodeType":"108","messageId":"112","endLine":64,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":87,"column":30,"nodeType":"108","messageId":"112","endLine":87,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":112,"column":30,"nodeType":"108","messageId":"112","endLine":112,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":136,"column":30,"nodeType":"108","messageId":"112","endLine":136,"endColumn":32},{"ruleId":"101","severity":1,"message":"113","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":9},{"ruleId":"101","severity":1,"message":"114","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":14},{"ruleId":"101","severity":1,"message":"115","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":20,"column":8,"nodeType":"103","messageId":"104","endLine":20,"endColumn":19},{"ruleId":"101","severity":1,"message":"117","line":22,"column":8,"nodeType":"103","messageId":"104","endLine":22,"endColumn":19},{"ruleId":"101","severity":1,"message":"118","line":29,"column":8,"nodeType":"103","messageId":"104","endLine":29,"endColumn":12},{"ruleId":"101","severity":1,"message":"119","line":35,"column":8,"nodeType":"103","messageId":"104","endLine":35,"endColumn":15},{"ruleId":"101","severity":1,"message":"120","line":47,"column":12,"nodeType":"103","messageId":"104","endLine":47,"endColumn":35},{"ruleId":"101","severity":1,"message":"121","line":48,"column":18,"nodeType":"103","messageId":"104","endLine":48,"endColumn":25},{"ruleId":"101","severity":1,"message":"122","line":49,"column":21,"nodeType":"103","messageId":"104","endLine":49,"endColumn":31},{"ruleId":"101","severity":1,"message":"123","line":144,"column":11,"nodeType":"103","messageId":"104","endLine":144,"endColumn":19},{"ruleId":"101","severity":1,"message":"124","line":197,"column":11,"nodeType":"103","messageId":"104","endLine":197,"endColumn":25},{"ruleId":"101","severity":1,"message":"125","line":199,"column":13,"nodeType":"103","messageId":"104","endLine":199,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":238,"column":33,"nodeType":"128","endLine":238,"endColumn":81},{"ruleId":"101","severity":1,"message":"129","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":57,"column":50,"nodeType":"132","messageId":"133","endLine":57,"endColumn":63},"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'$' is defined but never used.","'funnel' is defined but never used.","'clocks' is defined but never used.","'hoverClocks' is defined but never used.","'hoverFunnel' is defined but never used.","'user' is defined but never used.","'Tooltip' is defined but never used.","'clickedApplicationIndex' is assigned a value but never used.","'setMore' is assigned a value but never used.","'setinitial' is assigned a value but never used.","'moreApps' is assigned a value but never used.","'navigateProfil' is assigned a value but never used.","'userName' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactDOM' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]