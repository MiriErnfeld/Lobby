[{"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\index.js":"1","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\App.js":"3","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\InformationTemp.js":"5","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Chart2.js":"6","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\middleware\\crudMiddleware.js":"7","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\staticDetailsReducer.js":"8","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\actions\\staticAction.js":"9","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\applictaionsCards\\SourcesCards.js":"10","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\reducerUtils.js":"11","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\BarT.js":"12","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ChartT.js":"13","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Gouge2.js":"14","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeTask.js":"15","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeDeals.js":"16","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougePaper.js":"17","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Try.js":"18","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ProtectedRoutes.js":"19"},{"size":638,"mtime":1623143870407,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1615379974876,"results":"22","hashOfConfig":"21"},{"size":833,"mtime":1622714566874,"results":"23","hashOfConfig":"21"},{"size":534,"mtime":1623579914100,"results":"24","hashOfConfig":"21"},{"size":24021,"mtime":1620627820141,"results":"25","hashOfConfig":"21"},{"size":3624,"mtime":1619362575760,"results":"26","hashOfConfig":"21"},{"size":7244,"mtime":1623654639692,"results":"27","hashOfConfig":"21"},{"size":5066,"mtime":1620724587001,"results":"28","hashOfConfig":"21"},{"size":444,"mtime":1623576184045,"results":"29","hashOfConfig":"21"},{"size":12325,"mtime":1623740950842,"results":"30","hashOfConfig":"21"},{"size":346,"mtime":1618126615233,"results":"31","hashOfConfig":"21"},{"size":3047,"mtime":1619362615867,"results":"32","hashOfConfig":"21"},{"size":3264,"mtime":1619362541796,"results":"33","hashOfConfig":"21"},{"size":865,"mtime":1618398331030,"results":"34","hashOfConfig":"21"},{"size":865,"mtime":1620206579503,"results":"35","hashOfConfig":"21"},{"size":873,"mtime":1618398394058,"results":"36","hashOfConfig":"21"},{"size":862,"mtime":1618398399609,"results":"37","hashOfConfig":"21"},{"size":3975,"mtime":1618391920487,"results":"38","hashOfConfig":"39"},{"size":1872,"mtime":1620552480822,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17y6vb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vhixdz",{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\index.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\App.js",["84","85"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/staticStore';\r\nimport Information from './components/InformationTemp';\r\nimport Favicon from 'react-favicon'\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      {/* \r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>All Le Apps</title>\r\n        <link\r\n          href=\"https://en.wikipedia.org/wiki/Apis_florea#/media/File:Apis_florea_worker_1.jpg'\" />\r\n      </Helmet> */}\r\n      {/* <ProtectedRoute component={Information} /> */}\r\n      {/* <ProtectedRoute path={\"/:userName\"} component={Information} /> */}\r\n      <Information></Information>\r\n\r\n      {/* <Favicon url={''} /> */}\r\n\r\n    </Provider>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\InformationTemp.js",["86"],"\r\nimport React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport $ from 'jquery'\r\nimport HeaderLeader from '@leadercodes/leader-header'\r\n\r\n\r\nimport './InformationTemp.css';\r\n// import iconFive from '../img/iconFive.png'\r\n// import iconOne from '../img/iconOne.png'\r\n// import iconTwo from '../img/iconTwo.png';\r\n// import iconThree from '../img/iconThree.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport Chart2 from './Chart2'\r\nimport '../App.css'\r\nimport SourcesCards from './applictaionsCards/SourcesCards';\r\nimport '../components/applictaionsCards/SourcesCardsStyles.css'\r\nimport Gouge2 from './Gouge2'\r\nimport GougeTask from './GougeTask'\r\nimport GougeDeals from './GougeDeals'\r\nimport GougePaper from './GougePaper'\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n\r\nlet circleStyle1 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    backgroundColor: \"#DDA204\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle2 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"#0EBAA5\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle3 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"rgb(103, 114, 222)\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle4 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"#FD2443\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 1\r\n};\r\n\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nexport default withStyles(useStyles)(function Information() {\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const user = ReducerData.user\r\n    const dispatch = useDispatch()\r\n    const [more, setMore] = useState(false);\r\n    let [inmore, setInMore] = useState(true);\r\n\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#day\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (dateFormater === currentDate)\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (detaContact === currentDate)\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n        if (ReducerData.AllProject != null) {\r\n\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (dateProject === currentDate)\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (dateFormater === currentDate)\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (detaPaper === currentDate)\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n        }\r\n\r\n    }\r\n    function filterByWeek() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#week\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeWeek))\r\n\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaContact) >= new Date(dateBeforeWeek))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    function filterByMonth() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#month\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeMonth))\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            ;\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\")\r\n                return (new Date(detaContact) >= new Date(dateBeforeMonth))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    function filterByYear() {\r\n        $(\".filterBy\").css(\"font-weight\", \"unset\")\r\n        $(\"#year\").css(\"font-weight\", \"bold\")\r\n        if (ReducerData.AllProject != null) {\r\n            let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n                const dateProject1 = (AllProject.closeDate)\r\n                let dateProject = moment(dateProject1).format(\"MM/DD/YYYY\");\r\n                return (new Date(dateProject) >= new Date(dateBeforeYear))\r\n                // const dateProject = AllProject.startDate.split(\"/\")\r\n                // const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n                // return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        }\r\n        if (ReducerData.AllPapers != null) {\r\n            let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n                const datePaper1 = AllPapers.createdDate\r\n                let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setPaperStatic(AllPapersData.length))\r\n        }\r\n        if (ReducerData.AllTask != null) {\r\n            let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n                const dateTask = AllTask.startDate.split(\"/\")\r\n                const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n                return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        }\r\n        if (ReducerData.AllContact != null) {\r\n            let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n                const dateContact1 = (AllContact.createDateAndTime)\r\n                let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n                return (new Date(detaContact) >= new Date(dateBeforeYear))\r\n            })\r\n            dispatch(actions.setContactStatic(AllContactData.length))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <HeaderLeader appName={\"Leader\"} userName={user ? user.username : \"\"} />\r\n            <div className=\"firstDiv\" style={{ backgroundColor: 'rgb(248, 249, 250)', paddingTop: '80px' }}>\r\n                <div className=\"row pb-5\" style={{ marginRight: '5%', marginLeft: '5%' }} >\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                        <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                        </div>\r\n                    </div>‏\r\n                            <Grid container className=\"grid-container\" spacing={4} >\r\n                        <Grid item xs={12} sm={3} >\r\n                            <Paper className=\"paperOne\" onClick={() => { window.open(` https://contacts.dev.leader.codes/${user.username}`) }}\r\n                                style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#fff', height: ' 100px', width: '240px', color: '#DDA204' }}>\r\n                                <div className=\"ml-2 total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Contacts {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\" >\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 style={{ fontSize: \"19px\", color: \"#DDA204\" }} className=\"h6\">\r\n                                                {ReducerData.leaderStatic.sumContacts ? ReducerData.leaderStatic.sumContacts + \"/5000\" : \"0/5000\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <Gouge2 className=\"gouge1\"></Gouge2></div>\r\n                                    {/* <div onClick={\"https://pay.leader.codes/\"} className=\"upladge\" style={{ backgroundColor: \"#DDA204\" }}>upradge</div> */}\r\n                                </div>\r\n                                <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                                </div>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper className=\"paperTwo\" onClick={() => { window.open(`https://papers.dev.leader.codes/admin/${user.username}`) }} style={{ padding: 10, background: '#fff', cursor: 'pointer', color: '#01DCD1', borderRadius: '14px', height: ' 100px', width: '240px' }}>\r\n                                <div className=\"total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Papers {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\" >\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>\r\n                                                {ReducerData.leaderStatic.sumPapers ? ReducerData.leaderStatic.sumPapers + \"/500\" : \"0/500\"}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougePaper className=\"gouge1\"></GougePaper></div>\r\n                                </div>\r\n                                {/* <div onClick={\"https://pay.leader.codes/\"} className=\"upladge\" style={{ backgroundColor: \"#0EBAA5\" }}>upradge</div> */}\r\n                                {/* <div className=\"row\" style={{ margin: '1px' }}>\r\n                                </div> */}\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}  >\r\n                            <Paper className=\"paperThree\"\r\n                                onClick={() => {\r\n                                    window.open(` \r\n                            https://contacts.dev.leader.codes/${user.username}/deals`)\r\n                                }}\r\n                                style={{ cursor: 'pointer', padding: 10, background: '#fff', color: '#5475E3', borderRadius: '14px', height: ' 100px', width: '240px' }}>\r\n                                <div className=\"ml-2 total\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Deals {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div className=\"ml-2\">\r\n                                        <div class=\"col-6 p-2\">\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>\r\n                                                {ReducerData.leaderStatic.sumProjects ? ReducerData.leaderStatic.sumProjects + \"/500\" : \"0/500\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougeDeals className=\"gouge1\"></GougeDeals></div>\r\n                                    {/* <div\r\n                                        onClick={() => {\r\n                                            window.location.assign(`https://pay.leader.codes/`)\r\n                                        }}\r\n                                        className=\"upladge\" style={{ backgroundColor: \"#5475E3\" }}>upradge</div> */}\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}  >\r\n                            <Paper className=\"paperFour\"\r\n                                onClick={() => {\r\n                                    window.open(` \r\n                            https://reacthub.dev.leader.codes/${user.username}/myTasks`)\r\n                                }}\r\n                                style={{\r\n                                    paddingRight: '5px', paddingTop: '10px', background: '#fff', color: '#FD2443', borderRadius: '14px', cursor: 'pointer'\r\n                                    , height: ' 100px', width: '240px'\r\n                                }}>\r\n                                <div\r\n\r\n                                    className=\"ml-2 total cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder', color: 'black', fontSize: '12px' }}>\r\n                                    Total Tasks  {\" \"}\r\n                                </div>\r\n                                <div class=\"row justify-content-between\">\r\n                                    <div class=\" ml-2\">\r\n                                        <div className=\" col-6 p-2\" >\r\n                                            <h6 className=\"h6\" style={{ fontSize: \"19px\" }}>{ReducerData.leaderStatic.sumTasks ? ReducerData.leaderStatic.sumTasks + \"/500\" : \"0/500\"}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"gouge\">\r\n                                        <GougeTask className=\"gouge1\"></GougeTask></div>\r\n                                    {/* <p\r\n                                        onClick={() => {\r\n                                            window.location.assign(` \r\n                                            https://pay.leader.codes/`)\r\n                                        }}\r\n                                        className=\"upladge\" style={{ backgroundColor: \"#FD2443\" }}>\r\n                                        upradge\r\n                                    </p> */}\r\n                                </div>\r\n                                <div className=\"row\" style={{ margin: '1px' }}>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n                {more ?\r\n                    <>\r\n                        <div className=\"d-flex justify-content-center align-content-center\">\r\n                            <p className=\"moreTxt1  moreBtn\" onClick={() => {\r\n                                console.log(inmore)\r\n                                setInMore(true)\r\n                                console.log(inmore)\r\n                                setMore(!more)\r\n                            }}>Show Less</p>\r\n                        </div>\r\n                        <div className=\"div-container\">\r\n                            <Container className=\"p-0\">\r\n                                <div class=\"container p-0\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6 mb-0 text-time-container\">\r\n                                            <Navbar expand=\"md\" variant=\"light\" className=\"nav mb-0 d-flex navmy\" style={{ justifyContent: \"flex-start\" }}>\r\n                                                <p id=\"day\" onClick={filterByDay} className=\"filterBy\">Day</p>\r\n                                                <p id=\"week\" onClick={filterByWeek} className=\"filterBy\">Week</p>\r\n                                                <p id=\"month\" onClick={filterByMonth} className=\"filterBy\">Month</p>\r\n                                                <p id=\"year\" onClick={filterByYear} className=\"filterBy\">Year</p>\r\n                                            </Navbar>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 circle-menu-container\">\r\n                                            <Navbar expand=\"md\" variant=\"light\" className=\"justify-content-end is-small nav2\">\r\n                                                <p style={circleStyle1}>\r\n                                                </p>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Contacts</Navbar.Brand>\r\n                                                <div style={circleStyle2}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Papers</Navbar.Brand>\r\n                                                <div style={circleStyle3}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Deals</Navbar.Brand>\r\n                                                <div style={circleStyle4}>\r\n                                                </div>\r\n                                                <Navbar.Brand style={{ fontSize: \"14px\" }}>Tasks</Navbar.Brand>\r\n                                            </Navbar>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                        <Chart2 />\r\n                        <div style={{ backgroundColor: \"rgb(248, 249, 250)\", height: \"55px\" }} className=\"backgroundDiv\"></div>\r\n                    </>\r\n                    :\r\n                    <div className=\"d-flex justify-content-center align-content-center\">\r\n                        <p className=\"moreTxt1 moreBtn\" onClick={\r\n                            () => {\r\n                                ;\r\n                                setMore(!more)\r\n                                console.log(more)\r\n                                setInMore(false)\r\n                            }}>Show More</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <SourcesCards inMore={inmore} />\r\n        </div >\r\n    )\r\n})\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\middleware\\crudMiddleware.js",["87","88"],"import { data } from 'jquery';\r\nimport { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  debugger\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\n//I want to get the kind of the jwt according to the url\r\n\r\nlet jwt = \"\"\r\n\r\nconst getJwt = (url) => {\r\n  debugger\r\n  jwt = document.cookie.includes('devJwt') ?\r\n    document.cookie.split(\";\")\r\n      .filter(s => s.includes('devJwt'))[0].split(\"=\").pop()\r\n    : null\r\n}\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let url = window.location;\r\n    let userName = (url.pathname.split('/')[1]);\r\n    getJwt(url);\r\n    dispatch(actions.setJwt(jwt))\r\n    dispatch(actions.setUserName(userName))\r\n\r\n    return fetch(`https://lobby.dev.leader.codes/api/${userName}/getUserByUserName`,\r\n      {\r\n        method: 'GET', headers: { 'authorization': jwt }\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          window.location.assign(`https://dev.accounts.codes/lobby/login`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        debugger\r\n        dispatch(actions.setUser(result));\r\n        console.log(\"All User Details\" + result);\r\n        //  fetch to get sum of Deals-(Project) for user-----------------\r\n        fetch(`https://contacts.dev.leader.codes/api/deal/${userName}/getAllDealsByUser`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        }).then((data) => data.json())\r\n          .then((data) => {\r\n            if (!data.status) {\r\n              debugger\r\n              //all data for project\r\n              let projectData = data\r\n              //only sumProject\r\n              if (projectData && projectData.length !== 0) {\r\n                debugger\r\n                // let sumProject = data.countProjectsForUser\r\n                let result = projectData.result.length\r\n                dispatch(actions.setProjectStatic(result));\r\n                dispatch(actions.setProjectData(projectData));\r\n                dispatch(actions.setProjectChart(projectData));\r\n                console.log(data)\r\n              }\r\n              else {\r\n                dispatch(actions.setProjectStatic(\"0\"));\r\n                dispatch(actions.setProjectData(null));\r\n                dispatch(actions.setProjectChart(null));\r\n              }\r\n            }\r\n          })\r\n\r\n        // fetch to get sum tasks for user-------------\r\n        fetch(`https://reacthub.dev.leader.codes/api/${userName}/getAllTasksForUser`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n            if (!data.status) {\r\n              debugger\r\n              //all data for project\r\n              let taskData = data.userTasksList\r\n              debugger\r\n              //only sumTask\r\n              if (taskData && taskData.length !== 0) {\r\n                let sumTask = (data.countTasksForUser)\r\n                dispatch(actions.setTaskStatic(sumTask));\r\n                dispatch(actions.setTaskData(taskData));\r\n                dispatch(actions.setTaskChart(taskData));\r\n                console.log(\"task data!!!!!!!!@@@@@\" + data)\r\n              }\r\n            }\r\n            else {\r\n              debugger\r\n              dispatch(actions.setTaskStatic(\"0\"));\r\n              dispatch(actions.setTaskData(null));\r\n              dispatch(actions.setTaskChart(null));\r\n            }\r\n          })\r\n        //  fetch to get sum of papers for user-----------------\r\n        fetch(`https://papers.dev.leader.codes/api/${userName}/getAllQuote`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n\r\n            if (!data.status) {\r\n              // let sumPapers = (data.quotes.length)\r\n              if (data.quotes && data.quotes.length !== 0) {\r\n                let sumPapers = (data.quotes.length)\r\n                let dataQuotes = data.quotes\r\n                dispatch(actions.setPaperStatic(sumPapers));\r\n                dispatch(actions.setPaperData(dataQuotes));\r\n                dispatch(actions.setPaperChart(dataQuotes));\r\n                console.log(data)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setPaperStatic(\"0\"));\r\n              dispatch(actions.setPaperData(null));\r\n              dispatch(actions.setPaperChart(null));\r\n            }\r\n          })\r\n        // fetch to get sum of contacts for user----------------------\r\n        fetch(`https://api.dev.leader.codes/${userName}/getContacts/?includesConversations=false`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: jwt,\r\n          },\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n            debugger\r\n\r\n            if (!data.status) {\r\n              let contactData = data\r\n              //only sumContact\r\n              if (contactData && contactData.length !== 0) {\r\n                let sumContact = (contactData.length)\r\n                dispatch(actions.setContactStatic(sumContact));\r\n                dispatch(actions.setContactData(contactData));\r\n                dispatch(actions.setContactChart(contactData));\r\n                console.log(contactData)\r\n              }\r\n            }\r\n            else {\r\n              dispatch(actions.setContactStatic(\"0\"));\r\n              dispatch(actions.setContactData(null));\r\n              dispatch(actions.setContactChart(null));\r\n            }\r\n          })\r\n      },\r\n        (err) => {\r\n          return err;\r\n        })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  return next(action)\r\n}\r\nexport const extractJwt = ({ dispatch, getState }) => next => action => {\r\n  if (action.type === 'EXTRACT_JWT') {\r\n\r\n\r\n    let params = (new URL(document.location)).searchParams;\r\n    let jwtGlobal = params.get('jwt');\r\n    if (jwtGlobal) {\r\n      let newUrl = window.location.href\r\n      newUrl = newUrl.split('?jwt=')\r\n      newUrl = newUrl[0]\r\n      let date = new Date(Date.now() + 86400e3);\r\n      date = date.toUTCString();\r\n      var expires = \"expires=\" + date;\r\n      document.cookie = \"devJwt\" + \"=\" + jwtGlobal + \";\" + expires + \";domain=.dev.leader.codes;path=/\";\r\n      window.location.replace(newUrl)\r\n    }\r\n    else {\r\n      dispatch({ type: 'INIT_DATA' });\r\n    }\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\staticDetailsReducer.js",["89","90","91","92"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumContacts: 0, sumPapers: 0, sumProjects: 0, sumTasks: 0 },\r\n    GougeContact: \"0\",\r\n    dataStatic: [],\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    jwt: \"\",\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    user: {}\r\n};\r\n\r\nconst staticData = {\r\n\r\n    setJwt(state, action) {\r\n\r\n        state.jwt = (action.payload);\r\n    },\r\n\r\n    setUserName(state, action) {\r\n\r\n        state.user.username = (action.payload);\r\n    },\r\n    setUser(state, action) {\r\n\r\n        state.user = (action.payload);\r\n    },\r\n    setContactStatic(state, action) {\r\n\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setProjectStatic(state, action) {\r\n\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n        if (action.payload != null) {\r\n            state.AllProject = action.payload.result\r\n        }\r\n        else {\r\n            state.AllProject = action.payload\r\n        }\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n    },\r\n    setTaskData(state, action) {\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n        if (action.payload != null) {\r\n            let allData = action.payload\r\n            const arr = [...state.tasks];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].startDate.split(\"/\")\r\n                let date2 = date1[1]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.tasks = [...arr];\r\n        }\r\n    },\r\n    setProjectChart(state = initialState, action) {\r\n        if (action.payload != null) {\r\n            let allData = action.payload.result\r\n            const arr = [...state.projects];\r\n            for (let i = 0; i < allData.length; i++) {\r\n                const date1 = allData[i].closeDate\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.projects = [...arr];\r\n        }\r\n    },\r\n    setContactChart(state = initialState, action) {\r\n        debugger\r\n        if (action.payload != null) {\r\n\r\n            let allData = action.payload\r\n            console.log(initialState.contacts)\r\n            const arr = [...state.contacts];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].createDateAndTime\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.contacts = [...arr];\r\n        }\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n\r\n        if (action.payload != null) {\r\n            let allData = action.payload\r\n            console.log(initialState.papers)\r\n            const arr = [...state.papers];\r\n            for (let i = 0; i < allData.length; i++) {\r\n\r\n                const date1 = allData[i].createdDate\r\n                let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n                let date2 = date11[0]\r\n                if (date2[0] != 0) {\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n                else {\r\n                    date2 = date2[1]\r\n                    const x = (arr[date2]) + 1\r\n                    arr[date2] = x;\r\n                }\r\n            }\r\n            state.papers = [...arr];\r\n        }\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    },\r\n    setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n};\r\n\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\applictaionsCards\\SourcesCards.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\Redux\\reducers\\reducerUtils.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\BarT.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ChartT.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Gouge2.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeTask.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougeDeals.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\GougePaper.js",[],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\Try.js",["107","108"],"C:\\Users\\User\\Desktop\\LobbyStatistics\\LobbyWithStatistics\\src\\components\\ProtectedRoutes.js",["109","110","111"],"import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport configData from './config.json'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nfunction redirectToLogin(routes) {\r\n    window.location.href =\r\n        `https://accounts.codes/lobby/login`;\r\n    return null\r\n}\r\nconst ProtectedRoute = ({ component: Component, user, ...rest }) => {\r\n// const ProtectedRoute = ({ component: Component }) => {\r\n    const Data = useSelector(state => state.staticDetailsReducer)\r\n    const TokenToString = Data.jwt\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    debugger\r\n    let userName = rest.computedMatch.params.userName;//not recived rest from props\r\n    // let url = window.location;\r\n    // let userName = (url.pathname.split('/')[1]);\r\n    // let userName = window.location.pathname.split('/')[1];\r\n    useEffect(() => {\r\n        const isLocal = window.location.hostname == \"localhost\"\r\n        const url = `${configData.BASE_URL}${userName}/isPermission?isLocal=${isLocal}`;\r\n        const isPermission = async () => {\r\n            let response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Authorization: TokenToString,\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n            if (response.status == 401) {\r\n                setIsLoading(false)\r\n                setIsLoggedIn(true)\r\n            }\r\n            else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        isPermission()\r\n    }, [])\r\n\r\n    return isLoading ? null : isLoggedIn ?\r\n        redirectToLogin()\r\n        : <Route  render={props => { return <Component {...rest} {...props} /> }} />\r\n}\r\nexport default ProtectedRoute\r\n",{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":15},{"ruleId":"112","severity":1,"message":"116","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"112","severity":1,"message":"117","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":198,"column":34,"nodeType":"121","messageId":"122","endLine":198,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":67,"column":30,"nodeType":"121","messageId":"125","endLine":67,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":89,"column":30,"nodeType":"121","messageId":"125","endLine":89,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":114,"column":30,"nodeType":"121","messageId":"125","endLine":114,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":138,"column":30,"nodeType":"121","messageId":"125","endLine":138,"endColumn":32},{"ruleId":"112","severity":1,"message":"126","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":9},{"ruleId":"112","severity":1,"message":"127","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"128","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":14},{"ruleId":"112","severity":1,"message":"129","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":19},{"ruleId":"112","severity":1,"message":"130","line":22,"column":8,"nodeType":"114","messageId":"115","endLine":22,"endColumn":19},{"ruleId":"112","severity":1,"message":"131","line":29,"column":8,"nodeType":"114","messageId":"115","endLine":29,"endColumn":12},{"ruleId":"112","severity":1,"message":"132","line":35,"column":8,"nodeType":"114","messageId":"115","endLine":35,"endColumn":15},{"ruleId":"112","severity":1,"message":"133","line":47,"column":12,"nodeType":"114","messageId":"115","endLine":47,"endColumn":35},{"ruleId":"112","severity":1,"message":"134","line":48,"column":18,"nodeType":"114","messageId":"115","endLine":48,"endColumn":25},{"ruleId":"112","severity":1,"message":"135","line":49,"column":21,"nodeType":"114","messageId":"115","endLine":49,"endColumn":31},{"ruleId":"112","severity":1,"message":"136","line":144,"column":11,"nodeType":"114","messageId":"115","endLine":144,"endColumn":19},{"ruleId":"112","severity":1,"message":"137","line":197,"column":11,"nodeType":"114","messageId":"115","endLine":197,"endColumn":25},{"ruleId":"112","severity":1,"message":"138","line":199,"column":13,"nodeType":"114","messageId":"115","endLine":199,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":238,"column":33,"nodeType":"141","endLine":238,"endColumn":81},{"ruleId":"112","severity":1,"message":"142","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":57,"column":50,"nodeType":"145","messageId":"146","endLine":57,"endColumn":63},{"ruleId":"123","severity":1,"message":"147","line":23,"column":50,"nodeType":"121","messageId":"125","endLine":23,"endColumn":52},{"ruleId":"123","severity":1,"message":"147","line":34,"column":33,"nodeType":"121","messageId":"125","endLine":34,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":43,"column":8,"nodeType":"150","endLine":43,"endColumn":10,"suggestions":"151"},"no-unused-vars","'Favicon' is defined but never used.","Identifier","unusedVar","'Helmet' is defined but never used.","'Avatar' is defined but never used.","'data' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'$' is defined but never used.","'funnel' is defined but never used.","'clocks' is defined but never used.","'hoverClocks' is defined but never used.","'hoverFunnel' is defined but never used.","'user' is defined but never used.","'Tooltip' is defined but never used.","'clickedApplicationIndex' is assigned a value but never used.","'setMore' is assigned a value but never used.","'setinitial' is assigned a value but never used.","'moreApps' is assigned a value but never used.","'navigateProfil' is assigned a value but never used.","'userName' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactDOM' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'TokenToString' and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["152"],{"desc":"153","fix":"154"},"Update the dependencies array to be: [TokenToString, userName]",{"range":"155","text":"156"},[1674,1676],"[TokenToString, userName]"]